apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-account
    tier: backend
    version: {{ ks_version }}
  name: ks-account
  namespace: kubesphere-system
spec:
{% if master_num is defined and master_num != "0" %}
  replicas: {{ master_num }}
{% else %}
  replicas: 1
{% endif %}
  selector:
    matchLabels:
      app: ks-account
      tier: backend
      version: {{ ks_version }}
  template:
    metadata:
      labels:
        app: ks-account
        tier: backend
        version: {{ ks_version }}
    spec:
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
{% if master_num is defined and master_num != "1" %}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ks-account
            namespaces:
            - kubesphere-system
{% endif %}
      volumes:
      - configMap:
          defaultMode: 420
          name: policy-rules
        name: policy-rules
      - configMap:
          defaultMode: 420
          name: user-init
        name: user-init
      - configMap:
          defaultMode: 420
          name: kubesphere-config
        name: kubesphere-config
      initContainers:
      - name: wait-redis
        image: {{ busybox_repo }}:{{ busybox_tag }}
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z redis.kubesphere-system.svc 6379; do echo "waiting for redis"; sleep 2; done;']
      - name: wait-ldap
        image: {{ busybox_repo }}:{{ busybox_tag }}
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z openldap.kubesphere-system.svc 389; do echo "waiting for ldap"; sleep 2; done;']
      containers:
      - command:
        - ks-iam
        - --logtostderr=true
        - --jwt-secret=$(JWT_SECRET)
        - --admin-password=$(ADMIN_PASSWORD)
        - --enable-multi-login={{ console.enableMultiLogin | default(false) }}
        - --token-idle-timeout=4320m
        - --redis-url=redis://redis.kubesphere-system.svc:6379
        - --generate-kubeconfig=true
        env:
        - name: KUBECTL_IMAGE
          value: {{ ks_kubectl_repo }}:{{ ks_kubectl_tag }}
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: jwt-secret
              name: ks-account-secret
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: ks-account-secret
        volumeMounts:
        - mountPath: /etc/ks-iam
          name: user-init
        - mountPath: /etc/kubesphere/rules
          name: policy-rules
        - mountPath: /etc/kubesphere
          name: kubesphere-config
        image: {{ ks_account_repo }}:{{ ks_account_tag }}
        imagePullPolicy: {{ ks_image_pull_policy }}
        name: ks-account        
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: {{ ks_account_cpu_limit }}
            memory: {{ ks_account_memory_limit }}
          requests:
            cpu: {{ ks_account_cpu_requests }}
            memory: {{ ks_account_memory_requests }}
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-account
    tier: backend
    version: {{ ks_version }}
  name: ks-account
  namespace: kubesphere-system
spec:
  ports:
  - name: ks-account
    port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    app: ks-account
    tier: backend
    version: {{ ks_version }}
  sessionAffinity: None
  type: ClusterIP

